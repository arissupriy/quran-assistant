// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

class Chapter {
  final int id;
  final String revelationPlace;
  final int revelationOrder;
  final bool bismillahPre;
  final String nameSimple;
  final String nameComplex;
  final String nameArabic;
  final int versesCount;
  final Uint32List pages;
  final TranslatedName translatedName;

  const Chapter({
    required this.id,
    required this.revelationPlace,
    required this.revelationOrder,
    required this.bismillahPre,
    required this.nameSimple,
    required this.nameComplex,
    required this.nameArabic,
    required this.versesCount,
    required this.pages,
    required this.translatedName,
  });

  @override
  int get hashCode =>
      id.hashCode ^
      revelationPlace.hashCode ^
      revelationOrder.hashCode ^
      bismillahPre.hashCode ^
      nameSimple.hashCode ^
      nameComplex.hashCode ^
      nameArabic.hashCode ^
      versesCount.hashCode ^
      pages.hashCode ^
      translatedName.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Chapter &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          revelationPlace == other.revelationPlace &&
          revelationOrder == other.revelationOrder &&
          bismillahPre == other.bismillahPre &&
          nameSimple == other.nameSimple &&
          nameComplex == other.nameComplex &&
          nameArabic == other.nameArabic &&
          versesCount == other.versesCount &&
          pages == other.pages &&
          translatedName == other.translatedName;
}

class TranslatedName {
  final String languageName;
  final String name;

  const TranslatedName({required this.languageName, required this.name});

  @override
  int get hashCode => languageName.hashCode ^ name.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is TranslatedName &&
          runtimeType == other.runtimeType &&
          languageName == other.languageName &&
          name == other.name;
}
