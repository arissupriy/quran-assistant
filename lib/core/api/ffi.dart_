// lib/core/api/ffi.dart
import 'dart:ffi'; // Core FFI types: Pointer, Utf8, Void, Uint32, Uint64
import 'dart:io'
    show Platform; // For platform detection to load the correct dynamic library

import 'package:ffi/ffi.dart';

final String _libraryName = 'libhafiz_assistant_engine';

/// Path to the Rust dynamic library.
/// Adjust this based on your Rust build output.
/// Example: 'libquran_assistant_engine.so', 'libquran_assistant_engine.dylib', 'quran_assistant_engine.dll'
final DynamicLibrary _rustLib = Platform.isAndroid || Platform.isLinux
    ? DynamicLibrary.open('$_libraryName.so')
    : Platform.isIOS || Platform.isMacOS
    ? DynamicLibrary.open('$_libraryName.dylib')
    : DynamicLibrary.open('$_libraryName.dll');

// --- Core API FFI ---

// --- Core API FFI ---

/// Menginisialisasi engine Rust dan memuat semua data.
typedef InitEngineNative = Void Function();
typedef InitEngineDart = void Function();
final InitEngineDart initEngine = _rustLib
    .lookupFunction<InitEngineNative, InitEngineDart>('init_engine');

/// Mengembalikan jumlah total bab (surah).
typedef GetChaptersCountNative = Uint32 Function();
typedef GetChaptersCountDart = int Function();
final GetChaptersCountDart getChaptersCount = _rustLib
    .lookupFunction<GetChaptersCountNative, GetChaptersCountDart>(
      'get_chapters_count',
    );

/// Membebaskan memori C string yang dialokasikan Rust.
typedef FreeStringNative = Void Function(Pointer<Utf8>);
typedef FreeStringDart = void Function(Pointer<Utf8>);
final FreeStringDart freeString = _rustLib
    .lookupFunction<FreeStringNative, FreeStringDart>('free_string');

/// Membebaskan memori ByteBuffer yang dialokasikan Rust.
/// Sekarang menerima pointer ke data mentah (Pointer<Uint8>) dan panjangnya (Uint64).
typedef FreeByteBufferNative =
    Void Function(Pointer<Uint8> dataPtr, Uint64 dataLen);
typedef FreeByteBufferDart = void Function(Pointer<Uint8> dataPtr, int dataLen);
final FreeByteBufferDart freeByteBuffer = _rustLib
    .lookupFunction<FreeByteBufferNative, FreeByteBufferDart>(
      'free_byte_buffer',
    );

// --- Chapter Query FFI ---

/// Mengembalikan nama sederhana bab.
typedef GetChapterNameSimpleNative = Pointer<Utf8> Function(Uint32 chapterId);
typedef GetChapterNameSimpleDart = Pointer<Utf8> Function(int chapterId);
final GetChapterNameSimpleDart getChapterNameSimple = _rustLib
    .lookupFunction<GetChapterNameSimpleNative, GetChapterNameSimpleDart>(
      'get_chapter_name_simple',
    );

/// Mengembalikan detail bab dalam JSON.
typedef GetChapterDetailsNative = Pointer<Utf8> Function(Uint32 chapterId);
typedef GetChapterDetailsDart = Pointer<Utf8> Function(int chapterId);
final GetChapterDetailsDart getChapterDetails = _rustLib
    .lookupFunction<GetChapterDetailsNative, GetChapterDetailsDart>(
      'get_chapter_details',
    );

/// Mengembalikan semua ayat dalam surah dalam JSON array.
typedef GetAyahsBySurahNative = Pointer<Utf8> Function(Uint32 chapterId);
typedef GetAyahsBySurahDart = Pointer<Utf8> Function(int chapterId);
final GetAyahsBySurahDart getAyahsBySurah = _rustLib
    .lookupFunction<GetAyahsBySurahNative, GetAyahsBySurahDart>(
      'get_ayahs_by_surah',
    );

// --- Verse Query FFI ---

/// Mengembalikan teks ayat Uthmani dalam JSON.
typedef GetVerseTextUthmaniNative =
    Pointer<Utf8> Function(Pointer<Utf8> verseKey);
typedef GetVerseTextUthmaniDart =
    Pointer<Utf8> Function(Pointer<Utf8> verseKey);
final GetVerseTextUthmaniDart getVerseTextUthmani = _rustLib
    .lookupFunction<GetVerseTextUthmaniNative, GetVerseTextUthmaniDart>(
      'get_verse_text_uthmani',
    );

/// Mengembalikan Juz Number untuk Verse Key dalam JSON.
typedef GetJuzNumberForVerseNative =
    Pointer<Utf8> Function(Pointer<Utf8> verseKey);
typedef GetJuzNumberForVerseDart =
    Pointer<Utf8> Function(Pointer<Utf8> verseKey);
final GetJuzNumberForVerseDart getJuzNumberForVerse = _rustLib
    .lookupFunction<GetJuzNumberForVerseNative, GetJuzNumberForVerseDart>(
      'get_juz_number_for_verse',
    );

/// Mengembalikan detail lengkap ayat dalam JSON.
typedef GetVerseByChapterAndVerseNumberNative =
    Pointer<Utf8> Function(Uint32 chapterId, Uint32 verseNumber);
typedef GetVerseByChapterAndVerseNumberDart =
    Pointer<Utf8> Function(int chapterId, int verseNumber);
final GetVerseByChapterAndVerseNumberDart getVerseByChapterAndVerseNumber =
    _rustLib.lookupFunction<
      GetVerseByChapterAndVerseNumberNative,
      GetVerseByChapterAndVerseNumberDart
    >('get_verse_by_chapter_and_verse_number');

/// Mengembalikan teks terjemahan dalam JSON.
typedef GetTranslationTextNative =
    Pointer<Utf8> Function(Pointer<Utf8> verseKey, Uint32 resourceId);
typedef GetTranslationTextDart =
    Pointer<Utf8> Function(Pointer<Utf8> verseKey, int resourceId);
final GetTranslationTextDart getTranslationText = _rustLib
    .lookupFunction<GetTranslationTextNative, GetTranslationTextDart>(
      'get_translation_text',
    );

/// Mengembalikan detail kata dalam JSON.
typedef GetWordDetailsNative =
    Pointer<Utf8> Function(
      Uint32 chapterId,
      Uint32 verseNumber,
      Uint32 wordPosition,
    );
typedef GetWordDetailsDart =
    Pointer<Utf8> Function(int chapterId, int verseNumber, int wordPosition);
final GetWordDetailsDart getWordDetails = _rustLib
    .lookupFunction<GetWordDetailsNative, GetWordDetailsDart>(
      'get_word_details',
    );

// --- Mushaf Query FFI ---

/// Mengembalikan PageLayout dalam JSON.
typedef GetPageLayoutByPageNumberNative =
    Pointer<Utf8> Function(Uint32 pageNumber);
typedef GetPageLayoutByPageNumberDart = Pointer<Utf8> Function(int pageNumber);
final GetPageLayoutByPageNumberDart getPageLayoutByPageNumber = _rustLib
    .lookupFunction<
      GetPageLayoutByPageNumberNative,
      GetPageLayoutByPageNumberDart
    >('get_page_layout_by_page_number');

/// Mengembalikan WordData untuk baris dalam JSON array.
typedef GetLineWordsNative =
    Pointer<Utf8> Function(Uint32 pageNumber, Uint32 lineIndex);
typedef GetLineWordsDart =
    Pointer<Utf8> Function(int pageNumber, int lineIndex);
final GetLineWordsDart getLineWords = _rustLib
    .lookupFunction<GetLineWordsNative, GetLineWordsDart>('get_line_words');

// --- Metadata Query FFI ---

/// Mengembalikan detail Juz dalam JSON.
typedef GetJuzDetailsNative = Pointer<Utf8> Function(Uint32 juzNumber);
typedef GetJuzDetailsDart = Pointer<Utf8> Function(int juzNumber);
final GetJuzDetailsDart getJuzDetails = _rustLib
    .lookupFunction<GetJuzDetailsNative, GetJuzDetailsDart>('get_juz_details');

/// Mengembalikan metadata terjemahan (nama) dalam JSON string.
typedef GetTranslationMetadataByIdNative =
    Pointer<Utf8> Function(Uint32 resourceId);
typedef GetTranslationMetadataByIdDart = Pointer<Utf8> Function(int resourceId);
final GetTranslationMetadataByIdDart getTranslationMetadataById = _rustLib
    .lookupFunction<
      GetTranslationMetadataByIdNative,
      GetTranslationMetadataByIdDart
    >('get_translation_metadata_by_id');

// --- Index Query FFI ---

/// Mengembalikan kunci ayat untuk lemma dalam JSON array.
typedef GetAllVerseKeysForLemmaNative =
    Pointer<Utf8> Function(Pointer<Utf8> lemma);
typedef GetAllVerseKeysForLemmaDart =
    Pointer<Utf8> Function(Pointer<Utf8> lemma);
final GetAllVerseKeysForLemmaDart getAllVerseKeysForLemma = _rustLib
    .lookupFunction<GetAllVerseKeysForLemmaNative, GetAllVerseKeysForLemmaDart>(
      'get_all_verse_keys_for_lemma',
    );

/// Mencari ayat berdasarkan bentuk kata dan tipe pencarian dalam JSON array.
typedef SearchAyahsByWordFormNative =
    Pointer<Utf8> Function(Pointer<Utf8> query, Uint32 searchType);
typedef SearchAyahsByWordFormDart =
    Pointer<Utf8> Function(Pointer<Utf8> query, int searchType);
final SearchAyahsByWordFormDart searchAyahsByWordForm = _rustLib
    .lookupFunction<SearchAyahsByWordFormNative, SearchAyahsByWordFormDart>(
      'search_ayahs_by_word_form',
    );

/// Mengembalikan semua kunci ayat dalam daftar JSON array.
typedef GetAllVerseKeysListNative = Pointer<Utf8> Function();
typedef GetAllVerseKeysListDart = Pointer<Utf8> Function();
final GetAllVerseKeysListDart getAllVerseKeysList = _rustLib
    .lookupFunction<GetAllVerseKeysListNative, GetAllVerseKeysListDart>(
      'get_all_verse_keys_list',
    );

/// Mencari frasa dalam JSON array.
typedef SearchPhraseNative = Pointer<Utf8> Function(Uint32 phraseId);
typedef SearchPhraseDart = Pointer<Utf8> Function(int phraseId);
final SearchPhraseDart searchPhrase = _rustLib
    .lookupFunction<SearchPhraseNative, SearchPhraseDart>('search_phrase');

/// Mencari terjemahan dalam JSON array.
typedef SearchTranslationNative = Pointer<Utf8> Function(Pointer<Utf8> query);
typedef SearchTranslationDart = Pointer<Utf8> Function(Pointer<Utf8> query);
final SearchTranslationDart searchTranslation = _rustLib
    .lookupFunction<SearchTranslationNative, SearchTranslationDart>(
      'search_translation',
    );

// --- Similarity Query FFI ---

/// Mengembalikan ayat-ayat serupa dalam JSON array.
typedef GetSimilarAyahsNative = Pointer<Utf8> Function(Pointer<Utf8> verseKey);
typedef GetSimilarAyahsDart = Pointer<Utf8> Function(Pointer<Utf8> verseKey);
final GetSimilarAyahsDart getSimilarAyahs = _rustLib
    .lookupFunction<GetSimilarAyahsNative, GetSimilarAyahsDart>(
      'get_similar_ayahs',
    );

/// Mengembalikan ID frasa per ayat dalam JSON array.
typedef GetPhrasesByAyahNative = Pointer<Utf8> Function(Pointer<Utf8> verseKey);
typedef GetPhrasesByAyahDart = Pointer<Utf8> Function(Pointer<Utf8> verseKey);
final GetPhrasesByAyahDart getPhrasesByAyah = _rustLib
    .lookupFunction<GetPhrasesByAyahNative, GetPhrasesByAyahDart>(
      'get_phrases_by_ayah',
    );

/// Mengembalikan sorotan frasa dalam JSON.
typedef GetPhraseHighlightNative = Pointer<Utf8> Function(Uint32 phraseId);
typedef GetPhraseHighlightDart = Pointer<Utf8> Function(int phraseId);
final GetPhraseHighlightDart getPhraseHighlight = _rustLib
    .lookupFunction<GetPhraseHighlightNative, GetPhraseHighlightDart>(
      'get_phrase_highlight',
    );

// --- Quiz Generator FFI ---

/// Menghasilkan kuis Verse Completion dalam JSON.
/// PERBAIKAN KRITIS: Sekarang menerima pointer ke data mentah (Pointer<Uint8>)
/// dan panjangnya (Uint64) secara terpisah, agar kompatibel dengan Dart FFI.
/// Ini membutuhkan perubahan pada tanda tangan fungsi Rust Anda.
typedef GenerateVerseCompletionQuizNative =
    Pointer<Utf8> Function(Pointer<Uint8> filterDataPtr, Uint64 filterLen);
typedef GenerateVerseCompletionQuizDart =
    Pointer<Utf8> Function(Pointer<Uint8> filterDataPtr, int filterLen);
final GenerateVerseCompletionQuizDart generateVerseCompletionQuiz = _rustLib
    .lookupFunction<
      GenerateVerseCompletionQuizNative,
      GenerateVerseCompletionQuizDart
    >('generate_verse_completion_quiz');

/// Menghasilkan kuis Fragment Completion dalam JSON.
/// PERBAIKAN KRITIS: Sekarang menerima pointer ke data mentah (Pointer<Uint8>)
/// dan panjangnya (Uint64) secara terpisah.
typedef GenerateVerseFragmentQuizNative =
    Pointer<Utf8> Function(Pointer<Uint8> filterDataPtr, Uint64 filterLen);
typedef GenerateVerseFragmentQuizDart =
    Pointer<Utf8> Function(Pointer<Uint8> filterDataPtr, int filterLen);
final GenerateVerseFragmentQuizDart generateVerseFragmentQuiz = _rustLib
    .lookupFunction<
      GenerateVerseFragmentQuizNative,
      GenerateVerseFragmentQuizDart
    >('generate_verse_fragment_quiz');

/// Menghasilkan kuis Verse Puzzle dalam JSON.
/// PERBAIKAN KRITIS: Sekarang menerima pointer ke data mentah (Pointer<Uint8>)
/// dan panjangnya (Uint64) secara terpisah.
typedef GenerateVersePuzzleQuizNative =
    Pointer<Utf8> Function(Pointer<Uint8> filterDataPtr, Uint64 filterLen);
typedef GenerateVersePuzzleQuizDart =
    Pointer<Utf8> Function(Pointer<Uint8> filterDataPtr, int filterLen);
final GenerateVersePuzzleQuizDart generateVersePuzzleQuiz = _rustLib
    .lookupFunction<GenerateVersePuzzleQuizNative, GenerateVersePuzzleQuizDart>(
      'generate_verse_puzzle_quiz',
    );

/// Menghasilkan kuis Word Puzzle dalam JSON.
/// PERBAIKAN KRITIS: Sekarang menerima pointer ke data mentah (Pointer<Uint8>)
/// dan panjangnya (Uint64) secara terpisah.
typedef GenerateWordPuzzleQuizNative =
    Pointer<Utf8> Function(Pointer<Uint8> filterDataPtr, Uint64 filterLen);
typedef GenerateWordPuzzleQuizDart =
    Pointer<Utf8> Function(Pointer<Uint8> filterDataPtr, int filterLen);
final GenerateWordPuzzleQuizDart generateWordPuzzleQuiz = _rustLib
    .lookupFunction<GenerateWordPuzzleQuizNative, GenerateWordPuzzleQuizDart>(
      'generate_word_puzzle_quiz',
    );

// --- TAMBAHAN INI: Binding untuk fts_search ---
typedef FtsSearchNative = Pointer<Utf8> Function(Pointer<Utf8> queryFfi);
typedef FtsSearchDart = Pointer<Utf8> Function(Pointer<Utf8> queryFfi);
final ftsSearch = _rustLib.lookupFunction<FtsSearchNative, FtsSearchDart>(
  'fts_search',
);
